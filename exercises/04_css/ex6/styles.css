* {
  margin: 0;
  border-collapse: collapse;
  box-sizing: border-box;
}

body {
  display: grid;
  grid-template-rows: min-content auto min-content;
  /* TODO: modify the line below to add the needed grid-template-areas for header, main, and footer elements*/
  grid-template-areas:  
  "h"
  "m"
  "f";
  height: 100vh;
  grid-template-rows: 56px 1fr 56px;
  grid-template-columns: 1fr;
}

main {
  background-color: antiquewhite;
  width: 100%;
  height: 100%;
  grid-area: m;
}

header {
  background-color: lavender;
  width: 100%;
  padding: 1.5rem;
  grid-area: h;
}

article {
  background-color: lightblue;
  border: solid;
  margin: 0;
  display: grid;
  /* TODO: modify the line below to add the needed grid-template-areas for sections and articles.
  
  For placing areas side-by-side, the syntax is simple, for example:
    grid-template-areas:    "a1 b1"
                            "a2 b2";
  */
  grid-template-areas: 
  "section" "aside"
  "section" "aside"
  "section" ".";
  height: 100%;
}

section {
  border: solid;
  /* box-sizing: border-box; */
  margin: 0;
}

aside {
  border: solid;
  /* box-sizing: border-box; */
  background-color: cornflowerblue;
  margin: 0;
}

footer {
  background-color: darkslategray;
  grid-area: f;
  display: grid;
  /* TODO: modify the line below to add the needed grid-template-areas for the navigation elements*/
  grid-template-areas: "nav" "nav";
  padding: 1.5rem;
}


/* TODO: add the needed CSS rules below to set the required grid-area for each element with an ID, including the sections, asides, and navigation elements. 

An example:
#element_id {
    grid-area: ONE_OF_GRID_TEMPLATE_AREAS;
}

*/

#sec1 {
  grid-area: 1 / 1 / 2 / 2;
}
#sec2 {
  grid-area: 2 / 1 / 3 / 2;
}
#sec3 {
  grid-area: 3 / 1 / 4 / 3;
}
#aside1 {
  grid-area: 1 / 2 / 2 / 3;
}
#aside2 {
  grid-area: 2 / 2 / 3 / 3;
}
#nav1 {
  grid-area: 1 / 1 / 2 / 2;
}
#nav2 {
  grid-area: 1 / 2 / 2 / 3;
}

/* media quries */

/* small phones */
@media only screen and (max-width: 600px) {

  body.main.article {
    grid-template-areas: 
    "section"
    "section"
    "section"
    "aside"
    "aside";
    height: 100vh;
    grid-template-columns: 1fr;
  }
  body.main.footer{
    grid-template-areas: 
    "nav"
    "nav";
    height: 100vh;
    grid-template-columns: 1fr;
  }
  #sec1 {
    grid-area: 1 / 1 / 2 / 2;
    /*grid-template-columns: 1;*/
  }
  #sec2 {
    grid-area: 2 / 1 / 3 / 2;
  }
  #sec3 {
    grid-area: 3 / 1 / 4 / 2;
  }
  #aside1 {
    grid-area: 4 / 1 / 5 / 2;
  }
  #aside2 {
    grid-area: 5 / 1 / 6 / 2;
  }
  #nav1 {
    grid-area: 1 / 1 / 2 / 2;
  }
  #nav2 {
    grid-area: 2 / 1 / 3 / 2;
  }
  
  
}

/* phones and tablets */
@media only screen and (min-width: 600px) and (max-width: 991px){
  body.main.article {
    grid-template-areas: 
    "section" "aside"
    "section" "aside"
    "section" ".";
    grid-template-columns: 1fr 1fr;
  }
  body.main.footer{
    grid-template-areas: 
    "nav" 
    "nav";
    grid-template-columns: 1fr;
  }
  #sec1 {
    grid-area: 1 / 1 / 2 / 2;
  }
  #sec2 {
    grid-area: 2 / 1 / 3 / 2;
  }
  #sec3 {
    grid-area: 3 / 1 / 4 / 3;
  }
  #aside1 {
    grid-area: 1 / 2 / 2 / 3;
  }
  #aside2 {
    grid-area: 2 / 2 / 3 / 3;
  }
  #nav1 {
    grid-area: 1 / 1 / 2 / 2;
  }
  #nav2 {
    grid-area: 1 / 2 / 2 / 3;
  }
}

/* size > tablet */
@media only screen and (min-width: 992px) {
  
  main.body.article {
    grid-template-areas: 
  "section" "section" "section"
  "aside" "aside" "..";
  }
  main.body.footer{
    grid-template-areas: 
    "n1" "n2" "..";
  }
  #sec1 {
    grid-area: 1 / 1 / 2 / 2;
  }
  #sec2 {
    grid-area: 1 / 2 / 2 / 3;
  }
  #sec3 {
    grid-area: 1 / 3 / 2 / 4;
  }
  #aside1 {
    grid-area: 2 / 1 / 3 / 2;
  }
  #aside2 {
    grid-area: 2 / 2 / 3 / 3;
  }
  #nav1 {
    grid-area: 1 / 1 / 2 / 2;
  }
  #nav2 {
    grid-area: 1 / 2 / 2 / 3;
  }
}
